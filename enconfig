#!/bin/bash
# Script: unlockhome
# Author: Brian Wiborg
# Date: 20110316
# License: Academic Free 3.0
#
# = INSTALL =
# - copy script to /usr/local/bin/enconfig and create to symlinks
#   - encup -> /usr/local/bin/enconfig
#   - encdown -> /usr/local/bin/enconfig
# - create the ~/.privatedirs 
#   Each line represents an encfs-mountpoint pair, e.g.:
#     /home/myuser/.secret /home/myuser/secret
#
# = USAGE =
# - encup [<n>]  - Mount <n> directory or all if <n> is not set
# - endown [<n>] - Unmount <n> directory or all if <n> is not set
# - enconfig     - List all configured encfs numbered by <n>
#

PRIVATE_DIR_FILE=$HOME/.privatedirs
VERBOSE=true

mount_encfs () {
	declare encfs_dir="$1"
	declare mountpoint="$2"
	[[ $VERBOSE ]] && echo "Mounting $mountpoint"
	encfs "$encfs_dir" "$mountpoint"
}

unmount_encfs () {
	declare mountpoint="$1"
	[[ $VERBOSE ]] && echo "Unmounting $mountpoint"
	fusermount -u "$mountpoint"
}

remove_trailing_slash () {
	dir="$1"
	echo "$dir" | sed 's/\/$//'
}

is_mounted () {
	declare mountpoint="$(remove_trailing_slash $1)"
	if mount | grep "$mountpoint" >> /dev/null; then
		return 0
	else
		return 1
	fi
}

list_mounts () {
	declare encfs=$1
	declare mountpoint=$2
	declare counter=1
	while read encfs mountpoint; do
		if is_mounted "$mountpoint"; then
			echo "[$((counter++))] [M]   $mountpoint -" $(mount | grep "$(remove_trailing_slash ${mountpoint})" | cut -d' ' -f6)
		else
			echo "[$((counter++))] [ ]   $mountpoint"
		fi
	done < "$PRIVATE_DIR_FILE"
}

# command selection
case $(basename "$0") in
	enconfig)
		# Output the $PRIVATE_DIR_FILE to the user
		list_mounts
	;;
	encup)
		# Mount either all lines or an explicit line specified by $1
		declare linenumber=$1
		while read encfs mountpoint; do
			if ! is_mounted "$mountpoint"; then
				mount_encfs "$encfs" "$mountpoint"
			fi
		done < <(if [[ $linenumber == "" ]]; then cat "$PRIVATE_DIR_FILE"; else sed -n ${linenumber}p "$PRIVATE_DIR_FILE"; fi)
	;;
	encdown)
		# Unmount either all or line number specified by $1
		declare linenumber=$1
		while read encfs mountpoint; do
			if is_mounted "$mountpoint"; then
				unmount_encfs "$mountpoint"
			fi
		done < <(if [[ $linenumber == "" ]]; then cat "$PRIVATE_DIR_FILE"; else sed -n ${linenumber}p "$PRIVATE_DIR_FILE"; fi)
	;;
esac
echo
